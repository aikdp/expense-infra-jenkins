pipeline {
    agent{
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        // disableConcurrentBuilds()
        retry(2)
        ansiColor('xterm')
    }
    environment{
        // env
        appVersion = ''
    }
    parameters {    //added this params
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select actions')
    }
    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {     //add credential id here eg: aws-creds

                    sh """
                    cd 60-alb
                    terraform init -reconfigure
                    terraform plan -out=tfplan
                    """
                }
            }
        }
        stage('Apply or Destroy') {
            // input {
            //     message "Should we continue to 60-alb ?"
            //     ok "Yes, we should."
            // }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds')

                sh """
                cd 60-alb
                if [${params.ACTION} == 'apply']
                then
                    terraform apply -auto-approve tfplan

                elif [${params.ACTION} == 'destroy']
                then
                    terraform destroy -auto-approve
                fi
                """
            }
        }
    }
    post{
        always{
            echo "This section run alwys"   
            deleteDir()     //delete directory, for waste of memory
        }
        success{
            echo "This section run when pipleine is seccess."
        }
        failure{
            echo "this section fail when pipeline is FAILED"
        }
    }
}


    
